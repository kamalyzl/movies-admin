{"version":3,"sources":["components/Header.js","components/Footer.js","components/Aside.js","components/List.js","components/Table.js","components/Modal.js","components/RenderModal.js","data/movies.js","views/Home.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","icon","faUser","Footer","faAppleAlt","Aside","href","List","id","name","datePublic","status","onClickEdit","onClickTrash","faEdit","onClick","faTrash","nanoid","Tables","data","handleUpdate","handleTrash","length","Table","striped","bordered","hover","responsive","map","item","key","date","color","Modals","show","onHide","saveDate","title","children","Modal","closeButton","Title","Body","Button","variant","RenderModal","handleShow","onPress","onChange","type","value","required","Date","dataListMovies","toISOString","slice","TYPE_ACTION","Object","freeze","CREATE","UPDATE","Home","props","setState","state","handleChange","e","target","listMovies","idItem","indexToRemoved","indexOf","newListMovies","filter","_","i","splice","trashItem","removedListMovies","obj","updateItem","this","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38d57ec6.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport '../css/Header.css'\nconst Header = () => {\n  return (\n    <header className='header'>\n      <div />\n      <span className='icon'>\n        <FontAwesomeIcon icon={faUser} />\n      </span>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAppleAlt } from '@fortawesome/free-solid-svg-icons'\nimport '../css/Footer.css'\n\nconst Footer = () => {\n  return (\n    <footer className='footer'>\n      <div>\n        <FontAwesomeIcon icon={faAppleAlt} />\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Aside = () => {\n  return (\n    <nav>\n      <ul className='nav-ul'>\n        <a href='#'>\n          <li>Dashboard</li>\n        </a>\n        <a href='#'>\n          <li>Peliculas</li>\n        </a>\n        <a href='#'>\n          <li>Turnos</li>\n        </a>\n        <a href='#'>\n          <li>Administradores</li>\n        </a>\n        <a href='#'>\n          <li>Perfil</li>\n        </a>\n        <a href='#'>\n          <li>Cerrar Sesi√≥n</li>\n        </a>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Aside\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\n\nconst List = ({ id, name, datePublic, status, onClickEdit, onClickTrash }) => {\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{name}</td>\n      <td>{datePublic}</td>\n      <td>{status}</td>\n      <td>\n        <a href='#' className='table-icons'>\n          <FontAwesomeIcon icon={faEdit} onClick={onClickEdit} />\n        </a>\n        <a href='#' className='table-icons'>\n          <FontAwesomeIcon icon={faTrash} onClick={onClickTrash} />\n        </a>\n      </td>\n    </tr>\n  )\n}\n\nexport default List\n","import React from 'react'\nimport { Table } from 'react-bootstrap'\nimport nanoid from 'nanoid'\nimport ReactLoading from 'react-loading'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport List from './List'\n\nconst id = nanoid(5)\nconst Tables = ({ data, handleUpdate, handleTrash }) => {\n  return data.length > 0 ? (\n    <div className='table-list'>\n      <Table striped bordered hover responsive>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Nombre</th>\n            <th>Fecha de publicacion</th>\n            <th>Estado</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {\n            data && data.map((item) => {\n              return (\n                <List\n                  key={item.id}\n                  id={item.id}\n                  name={item.name}\n                  status={item.status}\n                  datePublic={item.date}\n                  onClickEdit={() => handleUpdate(item)}\n                  onClickTrash={() => handleTrash(item)}\n                />\n              )\n            })\n          }\n        </tbody>\n      </Table>\n    </div>\n  ) : <ReactLoading key={id} color='red' />\n}\n\nexport default Tables\n","import { Modal, Button } from 'react-bootstrap'\nimport React from 'react'\nconst Modals = ({ show, onHide, saveDate, title, children }) => {\n  return (\n    <>\n      <Modal show={show} onHide={onHide}>\n        <Modal.Header closeButton>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {children}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant='primary' onClick={saveDate}>\n            Guardar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default Modals\n","\nimport Modals from './Modal'\nimport React from 'react'\nconst RenderModal = ({ handleShow, onPress, onChange, title, show, name, date, status }) => {\n  return (\n    <Modals show={show} onHide={handleShow} saveDate={onPress} title={title}>\n      <div>\n        <form className='form'>\n          <label>\n          Nombre de Pelicula\n            <input type='text' name='name' value={name} onChange={onChange} required />\n          </label>\n          <label>\n          Fecha de publicaci√≥n\n            <input type='date' name='date' value={date} onChange={onChange} required />\n          </label>\n          <label>\n          Estado\n            <select value={status} name='status' onChange={onChange}>\n              <option value='Activo'>Activo</option>\n              <option value='Inactivo'>Inactivo</option>\n            </select>\n          </label>\n        </form>\n      </div>\n    </Modals>\n  )\n}\n\nexport default RenderModal\n","import nanoid from 'nanoid'\nconst date = new Date()\n\nexport const dataListMovies = [\n  {\n    id: nanoid(5),\n    name: 'Jason Bourne',\n    date: date.toISOString().slice(0, 10),\n    status: 'Inactivo'\n  },\n  {\n    id: nanoid(5),\n    name: 'Alicia en el pais de las maravillas',\n    date: date.toISOString().slice(0, 10),\n    status: 'Activo'\n  },\n  {\n    id: nanoid(5),\n    name: 'Nacidos Rey',\n    date: '2007-08-24',\n    status: 'Activo'\n  },\n  {\n    id: nanoid(5),\n    name: 'La inocencia',\n    date: '2005-07-20',\n    status: 'Activo'\n  }\n]\n","import React from 'react'\nimport nanoid from 'nanoid'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport Aside from '../components/Aside'\nimport Table from '../components/Table'\nimport RenderModal from '../components/RenderModal'\nimport {dataListMovies} from '../data/movies'\nimport '../css/Home.css'\n\nconst TYPE_ACTION = Object.freeze({\n  CREATE: 'create',\n  UPDATE: 'update'\n})\n\nclass Home extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { \n      show: false,\n      type: '',\n      name: '',\n      date: '',\n      id: '',\n      status: 'Activo',\n      listMovies: dataListMovies\n     }\n  }\n  handleShow = () => {\n    this.setState((state, props) => {\n      return { show: !state.show, name: '', date: '', status: 'Activo', type: TYPE_ACTION.CREATE}\n    })\n  }\n  \n  handleChange = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  }   \n  \n  onPress = () => {\n    const id = nanoid(5)\n    const {name, status, date, type, listMovies, id: idItem} = this.state\n \n    if (type === TYPE_ACTION.CREATE) {\n      this.setState((state)=>{ \n        return {\n          show:false, \n          listMovies: [...state.listMovies, ...[{id, name, date, status}]]\n        }\n      })\n    }\n\n    if (type === TYPE_ACTION.UPDATE) {\n        const indexToRemoved = listMovies.map((item) => item.id).indexOf(idItem);\n        const newListMovies = this.state.listMovies.filter((_, i) => i !== indexToRemoved)\n        newListMovies.splice( indexToRemoved, 0, {id: idItem, name, date, status} );\n        this.setState({\n          listMovies: newListMovies\n        },\n        () => {\n          this.setState({\n            show: false\n          })\n        }\n      );\n    }\n  }\n\n  trashItem = (item) => {\n    const { listMovies } = this.state\n    const removedListMovies = listMovies.filter(( obj ) =>  {\n      return obj.id !== item.id;\n  });\n    this.setState(()=>{ \n      return {\n        show:false, \n        listMovies: removedListMovies\n      }\n    })\n  }\n  updateItem = (item) => {\n    const {name, date, status, id} = item\n    this.setState(() => { \n      return {\n        show:true, \n        type: TYPE_ACTION.UPDATE,\n        name,\n        status,\n        date,\n        id\n      };\n    })\n  }\n\n  render () {\n    const {show, name, status, date, listMovies, type} = this.state\n    return (\n      <div>\n        <Header />\n        <main className='main'>\n          <Aside />\n          <section>\n            <div className='first'>\n              <h2>Peliculas</h2>\n              <button className='btn-primary' onClick={this.handleShow}>Nueva Pelicula</button>\n              {\n                type === TYPE_ACTION.CREATE ? (\n                  <RenderModal \n                  title='Nueva Pelicula'\n                  onChange={this.handleChange}\n                  onPress={this.onPress}\n                  handleShow={this.handleShow}\n                  show={show}\n                  name={name}\n                  date={date}\n                  status={status}\n\n                  />\n                ): (\n                  <RenderModal \n                  title='Editar Pelicula'\n                  onChange={this.handleChange}\n                  onPress={this.onPress}\n                  handleShow={this.handleShow}\n                  show={show}\n                  name={name}\n                  date={date}\n                  status={status}\n                  />\n                )\n              }\n            </div>\n            <Table data={listMovies} handleUpdate={(item) => this.updateItem(item)} handleTrash={(item) => this.trashItem(item)} />\n          </section>\n        </main>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React from 'react'\nimport Home from './views/Home'\nimport './App.css'\n\nfunction App () {\n  return (\n    <div className='App'>\n      <Home />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}